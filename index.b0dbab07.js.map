{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAcC,SAASC,eAAe,gBACtCC,EAAUF,SAASG,cAAc,aACjCC,EAAiBJ,SAASC,eAAe,mBAG/C,SAASI,IACPD,EAAeE,MAAMC,QAAU,O,CAIjC,SAASC,IACPJ,EAAeE,MAAMC,QAAU,M,CAIjC,SAASE,EAAUC,GACjBR,EAAQS,UAAY,4BAAyCC,OAAbF,EAAa,QAC7DF,G,CAuEFT,EAAYc,iBAAiB,UAAU,YAnCvC,SAA6BC,GAC3BZ,EAAQS,UAAY,GACpBN,KAEA,EAAAR,EAAAkB,iBAAgBD,GACbE,MAAK,SAAAC,GAGJ,GAFAT,IAEIS,EAAKC,OAAS,EAAG,CACnB,IAAMC,EAAMF,EAAK,GACXG,EAAQpB,SAASqB,cAAc,OACrCD,EAAME,IAAMH,EAAII,IAChBH,EAAMP,iBAAiB,SAAS,WAC9BJ,EAAU,wB,IAGZ,IAAMe,EAAcxB,SAASqB,cAAc,KAC3CG,EAAYC,YAAc,gBAA0Cb,OAA1BO,EAAIO,OAAO,GAAGF,aAExD,IAAMG,EAAc3B,SAASqB,cAAc,KAC3CM,EAAYF,YAAc,gBAA0Cb,OAA1BO,EAAIO,OAAO,GAAGC,aAExDzB,EAAQ0B,YAAYR,GACpBlB,EAAQ0B,YAAYJ,GACpBtB,EAAQ0B,YAAYD,E,MAEpBlB,EAAU,gC,IAGboB,OAAM,WACLpB,EAAU,mC,IAOdqB,CADgB/B,EAAYgC,M,IAK9BhC,EAAYO,MAAMC,QAAU,OAxE1BF,IAEAN,EAAYY,UAAY,8BAExB,EAAAd,EAAAmC,eACGhB,MAAK,SAAAU,GACAA,EAAOR,OAAS,GACGQ,EAAOO,KAAI,SAAAC,GAC9B,IAAMC,EAASnC,SAASqB,cAAc,UAGtC,OAFAc,EAAOJ,MAAQG,EAAME,GACrBD,EAAOV,YAAcS,EAAMG,KACpBF,C,IAGIG,SAAQ,SAAAH,GACnBpC,EAAY6B,YAAYO,E,IAG1BpC,EAAYO,MAAMC,QAAU,QAC5BC,MAEAT,EAAYO,MAAMC,QAAU,OAC5BC,I,IAGHqB,OAAM,WACLpB,EAAU,0B,IAgDhBD,G","sources":["src/js/app.js"],"sourcesContent":["import { fetchBreeds, fetchCatByBreed } from './cat-api';\n\nconst breedSelect = document.getElementById('breed-select');\nconst catInfo = document.querySelector('.cat-info');\nconst loadingMessage = document.getElementById('loading-message');\n\n// Show loading message\nfunction showLoadingMessage() {\n  loadingMessage.style.display = 'block';\n}\n\n// Hide loading message\nfunction hideLoadingMessage() {\n  loadingMessage.style.display = 'none';\n}\n\n// Show error message\nfunction showError(errorMessage) {\n  catInfo.innerHTML = `<p class=\"error-message\">${errorMessage}</p>`;\n  hideLoadingMessage(); // Hide loading message\n}\n\n// Fetch breeds and populate the select options\nfunction populateBreeds() {\n  showLoadingMessage(); // Show loading message\n\n  breedSelect.innerHTML = '<option value=\"\"></option>'; // Add empty option for initial state\n\n  fetchBreeds()\n    .then(breeds => {\n      if (breeds.length > 0) {\n        const breedOptions = breeds.map(breed => {\n          const option = document.createElement('option');\n          option.value = breed.id;\n          option.textContent = breed.name;\n          return option;\n        });\n\n        breedOptions.forEach(option => {\n          breedSelect.appendChild(option);\n        });\n\n        breedSelect.style.display = 'block'; // Show breed select\n        hideLoadingMessage(); // Hide loading message\n      } else {\n        breedSelect.style.display = 'none'; // Hide breed select if no breeds available\n        hideLoadingMessage(); // Hide loading message\n      }\n    })\n    .catch(() => {\n      showError('Failed to fetch breeds.'); // Show error message if fetching breeds fails\n    });\n}\n\n// Fetch cat information by breed\nfunction fetchCatInformation(breedId) {\n  catInfo.innerHTML = ''; // Clear previous cat information\n  showLoadingMessage(); // Show loading message\n\n  fetchCatByBreed(breedId)\n    .then(cats => {\n      hideLoadingMessage(); // Hide loading message\n\n      if (cats.length > 0) {\n        const cat = cats[0];\n        const image = document.createElement('img');\n        image.src = cat.url;\n        image.addEventListener('error', () => {\n          showError('Failed to load image.'); // Show error message if image fails to load\n        });\n\n        const description = document.createElement('p');\n        description.textContent = `Description: ${cat.breeds[0].description}`;\n\n        const temperament = document.createElement('p');\n        temperament.textContent = `Temperament: ${cat.breeds[0].temperament}`;\n\n        catInfo.appendChild(image);\n        catInfo.appendChild(description);\n        catInfo.appendChild(temperament);\n      } else {\n        showError('No cat information available.'); // Show error message if no cat information is available\n      }\n    })\n    .catch(() => {\n      showError('Failed to fetch cat information.'); // Show error message if fetching cat information fails\n    });\n}\n\n// Event listener for breed select change\nbreedSelect.addEventListener('change', () => {\n  const breedId = breedSelect.value;\n  fetchCatInformation(breedId);\n});\n\n// Initialize app\nbreedSelect.style.display = 'none'; // Hide breed select initially\npopulateBreeds();\nhideLoadingMessage(); // Hide loading message on initial load\n"],"names":["$bOlkj","parcelRequire","$7e6258f3559d0f34$var$breedSelect","document","getElementById","$7e6258f3559d0f34$var$catInfo","querySelector","$7e6258f3559d0f34$var$loadingMessage","$7e6258f3559d0f34$var$showLoadingMessage","style","display","$7e6258f3559d0f34$var$hideLoadingMessage","$7e6258f3559d0f34$var$showError","errorMessage","innerHTML","concat","addEventListener","breedId","fetchCatByBreed","then","cats","length","cat","image","createElement","src","url","description","textContent","breeds","temperament","appendChild","catch","$7e6258f3559d0f34$var$fetchCatInformation","value","fetchBreeds","map","breed","option","id","name","forEach"],"version":3,"file":"index.b0dbab07.js.map"}