{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAcC,SAASC,eAAe,gBACtCC,EAAUF,SAASG,cAAc,aACjCC,EAAiBJ,SAASC,eAAe,mBAG/C,SAASI,IACPD,EAAeE,MAAMC,QAAU,O,CAIjC,SAASC,IACPJ,EAAeE,MAAMC,QAAU,M,CAIjC,SAASE,EAAUC,GACjBR,EAAQS,UAAY,4BAA4BD,QAChDF,G,CAuEFT,EAAYa,iBAAiB,UAAU,MAnCvC,SAA6BC,GAC3BX,EAAQS,UAAY,GACpBN,KAEA,EAAAR,EAAAiB,iBAAgBD,GACbE,MAAKC,IAGJ,GAFAR,IAEIQ,EAAKC,OAAS,EAAG,CACnB,MAAMC,EAAMF,EAAK,GACXG,EAAQnB,SAASoB,cAAc,OACrCD,EAAME,IAAMH,EAAII,IAChBH,EAAMP,iBAAiB,SAAS,KAC9BH,EAAU,wBAAwB,IAGpC,MAAMc,EAAcvB,SAASoB,cAAc,KAC3CG,EAAYC,YAAc,gBAAgBN,EAAIO,OAAO,GAAGF,cAExD,MAAMG,EAAc1B,SAASoB,cAAc,KAC3CM,EAAYF,YAAc,gBAAgBN,EAAIO,OAAO,GAAGC,cAExDxB,EAAQyB,YAAYR,GACpBjB,EAAQyB,YAAYJ,GACpBrB,EAAQyB,YAAYD,E,MAEpBjB,EAAU,gCAAgC,IAG7CmB,OAAM,KACLnB,EAAU,mCAAmC,G,CAOjDoB,CADgB9B,EAAY+B,MACA,IAI9B/B,EAAYO,MAAMC,QAAU,OAxE1BF,IAEAN,EAAYY,UAAY,8BAExB,EAAAd,EAAAkC,eACGhB,MAAKU,IACAA,EAAOR,OAAS,GACGQ,EAAOO,KAAIC,IAC9B,MAAMC,EAASlC,SAASoB,cAAc,UAGtC,OAFAc,EAAOJ,MAAQG,EAAME,GACrBD,EAAOV,YAAcS,EAAMG,KACpBF,CAAM,IAGFG,SAAQH,IACnBnC,EAAY4B,YAAYO,EAAO,IAGjCnC,EAAYO,MAAMC,QAAU,QAC5BC,MAEAT,EAAYO,MAAMC,QAAU,OAC5BC,I,IAGHoB,OAAM,KACLnB,EAAU,0BAA0B,IAgD1CD","sources":["src/js/app.js"],"sourcesContent":["import { fetchBreeds, fetchCatByBreed } from './cat-api';\n\nconst breedSelect = document.getElementById('breed-select');\nconst catInfo = document.querySelector('.cat-info');\nconst loadingMessage = document.getElementById('loading-message');\n\n// Show loading message\nfunction showLoadingMessage() {\n  loadingMessage.style.display = 'block';\n}\n\n// Hide loading message\nfunction hideLoadingMessage() {\n  loadingMessage.style.display = 'none';\n}\n\n// Show error message\nfunction showError(errorMessage) {\n  catInfo.innerHTML = `<p class=\"error-message\">${errorMessage}</p>`;\n  hideLoadingMessage(); // Hide loading message\n}\n\n// Fetch breeds and populate the select options\nfunction populateBreeds() {\n  showLoadingMessage(); // Show loading message\n\n  breedSelect.innerHTML = '<option value=\"\"></option>'; // Add empty option for initial state\n\n  fetchBreeds()\n    .then(breeds => {\n      if (breeds.length > 0) {\n        const breedOptions = breeds.map(breed => {\n          const option = document.createElement('option');\n          option.value = breed.id;\n          option.textContent = breed.name;\n          return option;\n        });\n\n        breedOptions.forEach(option => {\n          breedSelect.appendChild(option);\n        });\n\n        breedSelect.style.display = 'block'; // Show breed select\n        hideLoadingMessage(); // Hide loading message\n      } else {\n        breedSelect.style.display = 'none'; // Hide breed select if no breeds available\n        hideLoadingMessage(); // Hide loading message\n      }\n    })\n    .catch(() => {\n      showError('Failed to fetch breeds.'); // Show error message if fetching breeds fails\n    });\n}\n\n// Fetch cat information by breed\nfunction fetchCatInformation(breedId) {\n  catInfo.innerHTML = ''; // Clear previous cat information\n  showLoadingMessage(); // Show loading message\n\n  fetchCatByBreed(breedId)\n    .then(cats => {\n      hideLoadingMessage(); // Hide loading message\n\n      if (cats.length > 0) {\n        const cat = cats[0];\n        const image = document.createElement('img');\n        image.src = cat.url;\n        image.addEventListener('error', () => {\n          showError('Failed to load image.'); // Show error message if image fails to load\n        });\n\n        const description = document.createElement('p');\n        description.textContent = `Description: ${cat.breeds[0].description}`;\n\n        const temperament = document.createElement('p');\n        temperament.textContent = `Temperament: ${cat.breeds[0].temperament}`;\n\n        catInfo.appendChild(image);\n        catInfo.appendChild(description);\n        catInfo.appendChild(temperament);\n      } else {\n        showError('No cat information available.'); // Show error message if no cat information is available\n      }\n    })\n    .catch(() => {\n      showError('Failed to fetch cat information.'); // Show error message if fetching cat information fails\n    });\n}\n\n// Event listener for breed select change\nbreedSelect.addEventListener('change', () => {\n  const breedId = breedSelect.value;\n  fetchCatInformation(breedId);\n});\n\n// Initialize app\nbreedSelect.style.display = 'none'; // Hide breed select initially\npopulateBreeds();\nhideLoadingMessage(); // Hide loading message on initial load\n"],"names":["$gUcIm","parcelRequire","$ce77af30fc9a6e63$var$breedSelect","document","getElementById","$ce77af30fc9a6e63$var$catInfo","querySelector","$ce77af30fc9a6e63$var$loadingMessage","$ce77af30fc9a6e63$var$showLoadingMessage","style","display","$ce77af30fc9a6e63$var$hideLoadingMessage","$ce77af30fc9a6e63$var$showError","errorMessage","innerHTML","addEventListener","breedId","fetchCatByBreed","then","cats","length","cat","image","createElement","src","url","description","textContent","breeds","temperament","appendChild","catch","$ce77af30fc9a6e63$var$fetchCatInformation","value","fetchBreeds","map","breed","option","id","name","forEach"],"version":3,"file":"index.d2bcd490.js.map"}